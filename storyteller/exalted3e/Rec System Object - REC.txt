th u(NEWCOBJ,STORYTELLER: Rec Management System <REC>,rec,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
th u(NEWCOBJ,STORYTELLER: Rec Database <RECDB>,recdb,u(cobj,rec),,1,WIZARD SAFE,INHERIT SIDEFX SAFE)

&CMD`+REC`PENNMUSH [u(cobj,rec)]=$^(?s)\+rec(?\:/(\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+REC`MAIN
@set [u(cobj,rec)]/CMD`+REC`PENNMUSH=regexp
&CMD`+REC`RHOSTMUSH [u(cobj,rec)]=$^(?s)\+rec(?\:/(\\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+REC`MAIN
@set [u(cobj,rec)]/CMD`+REC`RHOSTMUSH=regexp
&CMD`+REC`MAIN [u(cobj,rec)]=th u(setq,sysname,ACCOUNT);@attach %!/INC`GETSWITCH=%1;@attach %!/INC`[u(strfirstof,%q<switch>,MAIN)]=%2,%3
@set [u(cobj,rec)]/CMD`+REC`[u(choosegame,%i0,%d0)]=no_command

&SYSTEM`NAME [u(cobj,rec)]=REC
&SWITCHES`PLAYER [u(cobj,rec)]=READ|LIST|DELETE|AMOUNT|DESCRIBE|TYPE
&SWITCHES`ADMIN [u(cobj,rec)]=APPROVE|UNAPPROVE|DENY|PROCESS

&INC`MAIN [u(cobj,rec)]=@break cor(u(isguest,%#),not(u(isapproved,%#)))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=elements(%0,1,/),1;@check u(isapproved,%q<t1>)=@attach %!/INC`MSG=ERROR: Cannot recommend unapproved characters.;@attach %!/INC`PARTIAL=u(strfirstof,elements(%0,2,/),SOLAR),SOLAR|SILVER|GOLD|WHITE,|,type,XP Type;@attach %!/INC`VALID`POSINT=u(strfirstof,elements(%0,3,/),1),XP Type;@check strlen(%1)=@attach %!/INC`MSG=ERROR: No reason entered to rec for!;@break u(charsearch,%1,| ^)=@attach %!/INC`MSG=ERROR: The characters ^ and | are not allowed in a reason.;@attach %!/INC`DOSQL=INSERT`REC,%:,%q<t1objid>,%q<type>,%q<value>,%1;th u(setq,newid,u(mysql,GET`LATEST));@attach %!/INC`MSG=You have recommended %q<t1name> for %q<value> %q<type> XP.;@attach %!/INC`MSG`CHAN=[ansi(h,%q<t1name>)] received a [u(pueblize,recommendation,+rec/read %q<newid>)] for %q<value> %q<type> XP from [ansi(h,%n)].

&Q`INSERT`REC [u(cobj,rec)]=INSERT INTO $REC$ (rec_objid,rec_target,rec_type,rec_amount,rec_reason,rec_date) VALUES (?,?,?,?,?,UTC_TIMESTAMP())
&Q`GET`LATEST [u(cobj,rec)]=SELECT max(rec_id) from $REC$

&INC`LIST [u(cobj,rec)]=@attach %!/INC`VALID`POSINT=u(strfirstof,%0,1),Page;th u(setq,adm,u(isadmin,%#));th u(setq,pages,ceil(fdiv(u(mysql,GET`PAGECOUNT[if(%q<adm>,ALL)],%:),30)));@pemit %#=u(header,Rec List);@pemit %#=ansi(u(color,%#,COLOR,COLUMN_NAMES),align(4 18 18 6 2 2 18 3,ID,From,About,Type,R,A,On,Sta));@pemit %#=u(separator);th mapsql(MAP`LIST,if(%q<adm>,u(SQL`FORMAT,GET`LISTALL,mul(30,sub(%q<value>,1))),u(SQL`FORMAT,GET`LIST,%:,mul(30,sub(%q<value>,1)))));@pemit %#=u(subheader,Page %q<value> of %q<pages>)

&Q`GET`LISTALL [u(cobj,rec)]=SELECT rec_id,rec_objid,rec_target,UNIX_TIMESTAMP(rec_date),rec_type,rec_amount,rec_approve_amount,rec_status FROM $REC$ ORDER BY rec_id DESC LIMIT 30 OFFSET ?
&Q`GET`PAGECOUNTALL [u(cobj,rec)]=SELECT count(rec_id) FROM $REC$

&Q`GET`LIST [u(cobj,rec)]=SELECT rec_id,rec_objid,rec_target,UNIX_TIMESTAMP(rec_date),rec_type,rec_amount,rec_approve_amount,rec_status FROM $REC$ WHERE rec_objid=? ORDER BY rec_id DESC LIMIT 30 OFFSET ?
&Q`GET`PAGECOUNT [u(cobj,rec)]=SELECT count(rec_id) FROM $REC$ WHERE rec_objid=?

&MAP`LIST [u(cobj,rec)]=nspemit(%#,align(4 18 18 6 2 2 18 3,u(pueblize,%1,+rec/read %1),if(isobjid(%2),u(moniker,%2),*DELETED*),if(isobjid(%3),u(moniker,%3),*DELETED*),capstr(lcstr(%5)),add(%6,0),add(%7,0),u(fancytime,%4,%#),switch(%8,0,ansi(r,Pen),1,ansi(g,App),2,ansi(hr,Dny),3,ansi(hg,Fin)))

&INC`TARGET [u(cobj,rec)]=@attach %!/INC`VALID`POSINT=%0,Rec ID;@check u(setr,id,u(mysql,GET`EXIST,%q<value>))=@attach %!/INC`MSG=ERROR: Rec '%q<value>' does not exist.;@select/inline %2=1,{@check cor(u(isadmin,%#),u(mysql,GET`CHECK,%:,%q<id>))=@attach %!/INC`MSG=ERROR: Permission denied.}

&Q`GET`EXIST [u(cobj,rec)]=SELECT rec_id FROM $REC$ WHERE rec_id=?
&Q`GET`CHECK [u(cobj,rec)]=SELECT rec_id FROM $REC$ WHERE rec_objid=? AND rec_id=?

&INC`APPROVE [u(cobj,rec)]=@attach %!/INC`TARGET;th u(setq,orig,add(u(mysql,GET`AMOUNT,%q<id>),0));@check match(0 1 2,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Cannot change the status of processed recs.;@attach %!/INC`VALID`POSINT=u(strfirstof,before(%1,/),%q<orig>),XP Amount;th u(setq,reason,after(%1,/));th u(setq,type,u(mysql,GET`TYPE,%q<id>));@attach %!/INC`MSG`CHAN=Rec %q<id> approved for %q<value> %q<type> XP.;@attach %!/INC`DOSQL=SET`APPROVE,%:,%q<value>,%q<id>;@attach %!/INC`MSG=Rec %q<id> approved for %q<value> %q<type> XP.;@select/inline %q<type>=SILVER,{@attach %!/INC`DOCRAFT=%q<id>,SXP,%q<value>},GOLD,{@attach %!/INC`DOCRAFT=%q<id>,GXP,%q<value>},WHITE,{@attach %!/INC`DOCRAFT=%q<id>,WXP,%q<value>},SOLAR,{@attach %!/INC`DOCRAFT=%q<id>,SOLARXP,%q<value>}

&Q`GET`AMOUNT [u(cobj,rec)]=SELECT rec_amount FROM $REC$ WHERE rec_id=?
&Q`GET`TYPE [u(cobj,rec)]=SELECT rec_type FROM $REC$ WHERE rec_id=?
&Q`GET`STATUS [u(cobj,rec)]=SELECT rec_status FROM $REC$ WHERE rec_id=?
&Q`SET`APPROVE [u(cobj,rec)]=UPDATE $REC$ SET rec_status=1,rec_approve_objid=?,rec_approve_amount=? WHERE rec_id=?
&Q`GET`TARGET [u(Cobj,rec)]=SELECT rec_target FROM $REC$ WHERE rec_id=?

&INC`DOCRAFT [u(cobj,rec)]=@attach [u(cobj,xp)]/INIT`%1;th u(setq,target,u(mysql,GET`TARGET,%0));@attach %!/INC`DOSQL=INSERT`XP,%q<target>,%q<root>,%2,Recommendations,%:;@attach %!/INC`DOSQL=SET`FINISH,%:,%0

&Q`INSERT`XP [u(cobj,rec)]=INSERT INTO $EXPERIENCE$ (xp_objid,xp_type,xp_amount,xp_reason,xp_admin,xp_date) VALUES (?,?,?,?,?,UTC_TIMESTAMP())
&Q`SET`FINISH [u(Cobj,rec)]=UPDATE $REC$ SET rec_status=3,rec_approve_date=UTC_TIMESTAMP(),rec_approve_objid=? WHERE rec_id=?

&INC`UNAPPROVE [u(cobj,rec)]=@attach %!/INC`TARGET;th u(setq,orig,u(mysql,GET`AMOUNT,%q<id>));@check match(0 1 2,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Cannot change the status of processed recs.;@attach %!/INC`MSG`CHAN=Rec %q<id> is now unapproved!;@attach %!/INC`DOSQL=SET`UNAPPROVE,%q<id>;@attach %!/INC`MSG=Rec %q<id> is now unapproved!

&Q`SET`UNAPPROVE [u(cobj,rec)]=UPDATE $REC$ SET rec_status=0,rec_approve_amount=0 WHERE rec_id=?

&INC`DENY [u(cobj,rec)]=@attach %!/INC`TARGET;th u(setq,orig,u(mysql,GET`AMOUNT,%q<id>));@check match(0 1 2,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Cannot change the status of processed recs.;@attach %!/INC`MSG`CHAN=Rec %q<id> is now denied!;@attach %!/INC`DOSQL=SET`DENY,%q<id>;@attach %!/INC`MSG=Rec %q<id> is now denied!

&Q`SET`DENY [u(cobj,rec)]=UPDATE $REC$ SET rec_status=2,rec_approve_amount=0 WHERE rec_id=?

&INC`DELETE [u(cobj,rec)]=@attach %!/INC`TARGET=%0,,1;@check match(0,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Only pending recs can be altered.;@attach %!/INC`VERIFY=ansi(hr,WARNING:) This will delete Rec %q<id>. It cannot be recovered. Enter the same command to verify.,DELETE REC %q<id>;@attach %!/INC`DOSQL=DEL`REC,%q<id>;@attach %!/INC`MSG`CHAN=Deleted Rec %q<id>!;@attach %!/INC`MSG=Deleted Rec %q<id>!

&INC`AMOUNT [u(cobj,rec)]=@attach %!/INC`TARGET=%0,,1;@check match(0,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Only pending recs can be altered.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: No amount entered.;@attach %!/INC`VALID`POSINT=%1,XP Amount;@attach %!/INC`DOSQL=SET`AMOUNT,%q<value>,%q<id>;@attach %!/INC`MSG`CHAN=Changed amount of [u(pueblize,Rec %q<id>,+rec/read %q<id>)] to %q<value>.;@attach %!/INC`MSG=Changed amount of [u(pueblize,Rec %q<id>,+rec/read %q<id>)] to %q<value>.

&INC`DESCRIBE [u(cobj,rec)]=@attach %!/INC`TARGET=%0,,1;@check match(0,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Only pending recs can be altered.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: No new reason entered!;@attach %!/INC`DOSQL=SET`REASON,%1,%q<id>;@attach %!/INC`MSG`CHAN=Changed reason of [u(pueblize,Rec %q<id>,+rec/read %q<id>)].;@attach %!/INC`MSG=Changed reason of [u(pueblize,Rec %q<id>,+rec/read %q<id>)].

&INC`TYPE [u(cobj,rec)]=@attach %!/INC`TARGET=%0,,1;@check match(0,u(mysql,GET`STATUS,%q<id>))=@attach %!/INC`MSG=ERROR: Only pending recs can be altered.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: No new type entered!;@attach %!/INC`PARTIAL=%1,SOLAR|SILVER|GOLD|WHITE,|,type,XP Type;@attach %!/INC`DOSQL=SET`TYPE,%q<type>,%q<id>;@attach %!/INC`MSG`CHAN=Changed type of [u(pueblize,Rec %q<id>,+rec/read %q<id>)] to %q<type>.;@attach %!/INC`MSG=Changed type of [u(pueblize,Rec %q<id>,+rec/read %q<id>)] to %q<type>.

&Q`SET`TYPE [u(cobj,rec)]=UPDATE $REC$ set rec_type=? WHERE rec_id=?
&Q`SET`REASON [u(cobj,rec)]=UPDATE $REC$ set rec_reason=? WHERE rec_id=?
&Q`SET`AMOUNT [u(Cobj,rec)]=UPDATE $REC$ SET rec_amount=? WHERE rec_id=?
&Q`DEL`REC [u(cobj,rec)]=DELETE FROM $REC$ WHERE rec_id=?

&INC`READ [u(cobj,rec)]=@attach %!/INC`TARGET=%0,,1;@pemit %#=u(header,Rec %q<id>);th u(setq,details,u(mysql2,GET`DETAILS,%q<id>));@pemit %#=align(36 36,u(FUN`DETAILS,Submitter~1|About~2|Type~3|Amount~4|Submitted~6,%q<details>),u(FUN`DETAILS,Status~5|Handler~8|Handled~7|Awarded~9,%q<details>));@pemit %#=u(separator);@pemit %#=u(mysql2,GET`REASON,%q<id>);@pemit %#=u(subheader)

&FUN`DETAILS [u(cobj,rec)]=localize(iter(%0,align(15 20,rjust(ansi(g,before(%i0,~):),15),switch(1,t(match(1 2 8,u(setr,num,after(%i0,~)))),if(strlen(u(setr,obj,elements(%1,%q<num>,^))),if(isobjid(%q<obj>),u(moniker,%q<obj>),*DELETED*)),t(match(6 7,%q<num>)),u(fancytime,elements(%1,%q<num>,^),%#),eq(%q<num>,5),switch(elements(%1,%q<num>,^),0,Pending,1,Approved,2,Denied,3,Finished,???),eq(%q<num>,3),capstr(lcstr(elements(%1,%q<num>,^))),if(isnum(u(setr,result,elements(%1,%q<num>,^))),add(%q<result>,0),%q<result>))),|,%R))

&Q`GET`DETAILS [u(cobj,rec)]=SELECT rec_objid,rec_target,rec_type,rec_amount,rec_status,UNIX_TIMESTAMP(rec_date),UNIX_TIMESTAMP(rec_approve_date),rec_approve_objid,rec_approve_amount FROM $REC$ WHERE rec_id=?

&Q`GET`REASON [u(cobj,rec)]=SELECT rec_reason FROM $REC$ WHERE rec_id=?

&Q`INSTALL`REC [u(cobj,rec)]=CREATE TABLE IF NOT EXISTS $REC$ (rec_id BIGINT(31) UNSIGNED NOT NULL AUTO_INCREMENT,rec_objid VARCHAR(25) NOT NULL,rec_target VARCHAR(25) NOT NULL,rec_type VARCHAR(80),rec_amount DECIMAL(7,3),rec_status TINYINT NOT NULL DEFAULT 0,rec_date DATETIME,rec_approve_date DATETIME,rec_reason TEXT,rec_approve_objid VARCHAR(25),rec_approve_amount DECIMAL(7,3),PRIMARY KEY(rec_id)) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1

&SQL`TABLES [u(cobj,rec)]=REC
&SQL`TABLE`REC [u(cobj,rec)]=mushcode_rec
&SQL`TABLE`EXPERIENCE [u(cobj,rec)]=mushcode_experience
&SQL`TABLE`PLAYERS [u(cobj,rec)]=scene_players
&SQL`TABLE`POSES [u(cobj,rec)]=scene_poses

&INC`PROCESS [u(cobj,rec)]=

&LASTPROCESS [u(cobj,rec)]=1458385210
&ADMINOBJ [u(cobj,rec)]=#1057:1386575067

&TRG`DOPROCESS [u(cobj,rec)]=@check words(u(setr,list,u(filter,ISOBJID,u(mysql,GET`ACTIVE,v(LASTPROCESS)))))=@attach %!/INC`MSG`CHAN=No active players to award XP to. Bummer.;@dolist/inline %q<list>={@attach %!/INC`DOSQL=INSERT`XP,%i0,XP,5,Weekly Activity XP,v(ADMINOBJ)};@attach %!/INC`MSG`NOTICE=[ansi(h,u(moniker,v(ADMINOBJ)))] awarded you 5 XP for Weekly Activity.,%q<list>;@attach %!/INC`MSG`CHAN=[ansi(h,u(moniker,v(ADMINOBJ)))] awarded 5 Weekly XP to: [itemize(iter(%q<list>,u(moniker,%i0),%b,|),|,and,\,)];@dolist/inline %q<list>={@attach %!/INC`DOSQL=INSERT`XP,%i0,SOLXP,4,Weekly Solar XP,v(ADMINOBJ);@attach %!/INC`MSG`NOTICE=[ansi(h,u(moniker,v(ADMINOBJ)))] awarded you 4 Solar XP for Weekly Activity.,%i0};@attach %!/INC`MSG`CHAN=[ansi(h,u(moniker,v(ADMINOBJ)))] awarded the following Solar XP for Weekly Activity: [itemize(iter(%q<list>,u(moniker,%i0),%b,|),|,and,\,)];&LASTPROCESS [u(cobj,rec)]=secs()

&Q`GET`ACTIVE [u(cobj,rec)]=SELECT DISTINCT objid FROM $PLAYERS$ LEFT JOIN $POSES$ ON $PLAYERS$.player_id=$POSES$.player_id WHERE pose_time >= FROM_UNIXTIME(?)

&Q`GET`SOLAR [u(cobj,rec)]=SELECT rec_target,sum(rec_approve_amount) FROM $REC$ WHERE rec_status=1 AND rec_type='SOLAR' GROUP BY rec_target
&Q`FINISH`SOLAR [u(Cobj,rec)]=UPDATE $REC$ SET rec_status=3 WHERE rec_status=1 AND rec_type='SOLAR'




+help/add +rec=[u(cobj,rec)]/HLP`+REC
+help/category +rec=Roleplaying
+help/metatags +rec=recommendations votes
&HLP`+REC [u(cobj,rec)]=The Rec system allows Players to recommend each other \(sometimes even themselves\) for XP rewards. Recommendations are then reviewed by admin.%R%R[ansi(hc,Concepts)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,XP Type)] - Your choices are SOLAR \(default\)\, SILVER\, GOLD\, and WHITE.%R[ansi(h,Status)] - Recs begin as PENDING\, and from there can be either APPROVED or DENIED. Recs that have had XP awarded shift to FINISHED.%R[ansi(h,Reason)] - When recommending a character you must include a reason. This will probably be the pose that was worth awarding\, maybe a scene log URL. For Crafting XP it can be a complete explanation of what situations\, rules\, and Charms call for the change and possibly the relevant pose or scene.)]%R%R[ansi(hc,Managing Recs)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+rec <character>=<reason>)] - Recommends someone else receive 1 SOLAR XP. This is the easy\, default recommendation mode.%R[ansi(h,+rec <character>/<type>/<amount>=<reason>)] - Recommends someone receive a specific type of XP in certain amounts. For instance\, +rec %n/Silver/2=<reason>. <amount> defaults to 1 if not provided.%R[ansi(h,+rec/list <page>)] - Displays the recs you have made and their current status. <page> defaults to 1 if not provided.%R[ansi(h,+rec/read <id>)] - View details about a recommendation.%R[ansi(h,+rec/amount <id>=<value>)] - Change the amount recommended on a PENDING rec.%R[ansi(h,+rec/type <id>=<type>)] - Change the XP Type a Pending Rec is offering.%R[ansi(h,+rec/describe <id>=<reason>)] - Change the Reason a rec was made.%R[ansi(h,+rec/delete <id>)] - Delete a pending rec you made.)]


+shelp/add +rec=[u(cobj,rec)]/SHLP`+REC
+shelp/category +rec=Character
&SHLP`+REC [u(cobj,rec)]=Staff are able to use all of the player commands on all recs. They also see every rec and not just their own%R%R[ansi(hc,Staff Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+rec/approve <id>=<amount>)] - Approve a Rec. Provide an <amount> to specify an alternate quantity to award. For instance\, if Rec 5 was giving away 2 XP\, you could +rec/approve 5=1 to make it actually give 1 instead.%R[ansi(h,+rec/deny <id>)] - Deny a recommendation.%R[ansi(h,+rec/unapprove <id>)] - Return a rec to pending status from Approved or Denied status. Does not work on Finished.%R%RCRAFTING XP - SILVER GOLD WHITE - will process IMMEDIATELY when the rec is approved. Solar XP is run weekly by the auto-XP system and caps at 5 per week.%R%RBe sure to +rec/read craft XP jobs thoroughly since you may need to subtract Silver as part of a request for gold\, etc.)]
