@@ DEPENDENCIES: Core, Ancestor Room
@@ @lock/enter is not inherited in Rhost. You'll need to set your @locks more carefully in Rhost.

th u(NEWCOBJ,Grid and Navigation System <GRID>,grid,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)
th u(NEWCOBJ,District Parent <DISTRICT>,district,u(cobj,grid),u(cobj,ancestor_room),,WIZARD SAFE,INHERIT SIDEFX SAFE)

@select/inline %va=PennMUSH,{@lock/enter [u(cobj,district)]=FUN`ENTER/1;@lset [u(cobj,district)]/enter=!no_inherit;@lock/teleport [u(cobj,district)]=FUN`TELEPORT/1;@lset [u(cobj,district)]/teleport=!no_inherit},RhostMUSH,{@lock/use [u(cobj,district)]=FUN`TELEPORT/1}
&FUN`ENTER [u(cobj,district)]=vol_approved(%#)
&FUN`TELEPORT [u(cobj,district)]=vol_approved(%#)

@select/inline isdbref(u(setr,builder,pmatch(Buildstaff)))=1,{&COBJ`BUILDSTAFF [u(cobj,mco)]=objid(%q<builder>)},0,{@pcreate Buildstaff=[scramble(digest(md5,secs()))];&COBJ`BUILDSTAFF [u(cobj,mco)]=objid(pmatch(Builderstaff))}
@select/inline %va=PennMUSH,{@lock/zone u(cobj,buildstaff)=POWER^BUILDER;@set u(cobj,buildstaff)=!UNREGISTERED SHARED;@power u(cobj,buildstaff)=no_pay no_quota;@lset u(cobj,buildstaff)/zone=visual},RhostMUSH,{}

&CMD`+GRID`PENNMUSH [u(cobj,grid)]=$^(?s)\+(district|dig|open|convert|builder)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+GRID`MAIN
@set [u(cobj,grid)]/CMD`+GRID`PENNMUSH=regexp
&CMD`+GRID`RHOSTMUSH [u(cobj,grid)]=$^(?s)\+(district|dig|open|convert|builder)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+GRID`MAIN
@set [u(cobj,grid)]/CMD`+GRID`RHOSTMUSH=regexp
&CMD`+GRID`MAIN [u(cobj,grid)]=th u(setq,systype,%1);@attach %!/INC`GETSWITCH=%2;@attach %!/INC`%q<systype>`[u(strfirstof,%q<switch>,MAIN)]=%3,%4
@set [u(cobj,grid)]/CMD`+GRID`[u(choosegame,RHOSTMUSH,PENNMUSH)]=no_command

&SWITCHES`DISTRICT`PLAYER [u(cobj,grid)]=LOCK|UNLOCK|DESCRIBE|IC
&SWITCHES`DISTRICT`ADMIN [u(cobj,grid)]=CONFIG
&SWITCHES`DISTRICT`WIZARD [u(cobj,grid)]=CREATE|DESTROY|ASSIGN|SUBCREATE|RENAME|ORDER
&SWITCHES`DIG`PLAYER [u(cobj,grid)]=TELEPORT
&SWITCHES`BUILDER`ADMIN [u(cobj,grid)]=ADD|REMOVE


&SYSTEM`SWITCHES [u(cobj,grid)]=setunion(setunion(v(SWITCHES`%q<systype>`PLAYER),if(u(isadmin,%#),v(SWITCHES`%q<systype>`ADMIN)),|,|),if(u(iswizard,%#),v(SWITCHES`%q<systype>`WIZARD)),|,|)

&SYSTEM`NAME [u(cobj,grid)]=GRID

&INC`BUILDER`MAIN [u(cobj,grid)]=@select/inline u(isadmin,%#)=1,{@select/inline strlen(%0)=0,{@check words(u(setr,build,u(choosegame,lsearch(all,player,elock,POWER^BUILDER),))=@attach %!/INC`MSG=There are no Builder Characters.;@pemit %#=u(header,mudname() Builder Characters);@pemit %#=iter(%q<build>,ansi(h,%i0 - [name(%i0)]) - [powers(%i0)],%b,%R);@pemit %#=u(header)},{@attach %!/INC`CHECKPC=%0,1;@pemit %#=u(header,%q<t1name>'s Belongings);@dolist/inline THING ROOM EXIT=@select/inline gt(words(u(setr,search,lsearch(%q<t1>,type,##))),0)=1,{@pemit %#=u(subheader,Type: ##);@dolist/inline %q<search>={th u(setq,item,u(choosegame,%i0,%d0));@pemit %#=[rjust(u(pueblize,%q<item>,brief %q<item>),7)] - [name(%q<item>)]}};@pemit %#=u(subheader)}},0,{@attach %!/INC`MSG=You [if(haspower(%#,BUILDER),ansi(hg,are),ansi(hr,are not))] A Builder!}

&INC`BUILDER`ADD [u(cobj,grid)]=@attach %!/INC`CHECKPC=%0,1;@stop haspower(%q<t1>,BUILDER)=@attach %!/INC`MSG=ERROR: They are already a Builder.;@set %q<t1>=!UNREGISTERED;@power %q<t1>=builder;give %q<t1>=100000;@attach %!/INC`MSG=You have made %q<t1name> a Builder.;@pemit %q<t1>=msghead(BUILDER) %n has granted you Builder powers.;@select/inline gt(v(VAR`BUILDER`ALERTMODE),0)={@nscemit/noisy u(VAR`BUILDER`ALERTSCHANNEL)=%n has made %q<t1name> a Builder.}

&INC`BUILDER`REMOVE [u(cobj,grid)]=@attach %!/INC`CHECKPC=%0,1;@check haspower(%q<t1>,BUILDER)=@attach %!/INC`MSG=ERROR: They are not a Builder.;@set %q<t1>=!UNREGISTERED;@power %q<t1>=!builder;@select/inline lt(money(%q<t1>),100000)=1,{give %q<t1>=100000};give %q<t1>=-99000;@attach %!/INC`MSG=You have revoked %q<t1name>'s Builder powers.;@pemit %q<t1>=msghead(BUILDER) %n has revoked your Builder powers.;@select/inline gt(v(VAR`BUILDER`ALERTMODE),0)={@nscemit/noisy u(VAR`BUILDER`ALERTSCHANNEL)=%n

&FUN`LISTDISTRICTS [u(cobj,grid)]=u(sortorder,u(sortname,u(filter,ISDIST,children(%0))))

&FIL`ISDIST [u(cobj,grid)]=cand(hastype(%0,THING),get(%0/D`DISTRICT))
&FIL`NOTDIST [u(cobj,grid)]=not(u(FIL`ISDIST,%0))

&INC`DISTRICT`MAIN [u(cobj,grid)]=@select/inline strlen(%0)=>0,{@attach %!/INC`DISTRICT`CHOOSE},{@attach %!/INC`DISTRICT`LIST}

&INC`DISTRICT`LIST [u(cobj,grid)]=@pemit %#=u(HEADER,mudname() District Parents);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(5 2 26 9 33,DBREF,IC,Name,Rooms,Description));@pemit %#=u(SEPARATOR);@dolist/inline u(FUN`LISTDISTRICTS,u(cobj,district))={@pemit %#=u(FUN`DISTRICTLINE,##,0)};@pemit %#=u(FOOTER)

&FUN`DISTRICTLINE [u(cobj,grid)]=[u(setq,subs,u(FUN`LISTDISTRICTS,%0))][align(5 2 26 9 33,u(pueblize,ansi(if(controls(%#,%0),hg,hr),num(%0)),+district u(setr,distn,u(FUN`DISTNAME,%0))),default(%0/D`IC,0),[if(%1,space(mul(%1,2))-%B)][u(pueblize,name(%0),+district %q<distn>)],sub(u(nchildren,%0),words(%q<subs>)),default(%0/DESCRIBE,???))][if(words(%q<subs>),%R[iter(%q<subs>,u(FUN`DISTRICTLINE,%i0,add(1,%1),words(%q<subs>)),%B,%R)])]

&FUN`DISTNAME [u(cobj,grid)]=iter(after(lparent(%0),num(u(cobj,district))),name(%i0),%b,/)

&INC`DISTRICT`CHOOSE [u(cobj,grid)]=@attach %!/INC`FINDDIST=%0;@check cor(u(isadmin,%#),controls(%#,%q<dist>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`MSG=Now managing district %q<distname>.;&D`DISTRICT %#=%q<dist>

&INC`DISTRICT`CONFIG [u(Cobj,grid)]=@attach %!/INC`CONFIG

&INC`DISTRICT`CREATE [u(cobj,grid)]=@attach %!/INC`MAKEDISTRICT=%0,u(cobj,district);@attach %!/INC`MSG=District Created! You have been set to managing it.;&D`DISTRICT %#=%q<dist>;@attach %!/INC`MSG`CHAN={Created District %q<dist> '[name(%q<dist>)]'}

&INC`DISTRICT`SUBCREATE [u(cobj,grid)]=@attach %!/INC`FINDDIST=%0,1;@attach %!/INC`MAKEDISTRICT=%1,%q<dist1>,1;@attach %!/INC`MSG=sub-District Created! You have been set to managing it.;&D`DISTRICT %#=%q<dist2>;@attach %!/INC`MSG`CHAN={Created sub-District %q<dist2> '[name(%q<dist2>)]' for %q<dist> '[name(%q<dist>)]'}

&INC`VALID`DISTRICT [u(cobj,grid)]=@check strlen(u(setr,value,trim(%0)))=@attach %!/INC`MSG=ERROR: District name empty.;@check valid(name,%q<value>)=@attach %!/INC`MSG=ERROR: '%0' is not a valid object name.;@stop strmatch(%q<value>,root)=@attach %!/INC`MSG=ERROR: "root" is not an acceptable district name.;@stop strmatch(%q<value>,*/*)=@attach %!/INC`MSG=ERROR: "/" is not allowed in district names.;@stop cand(u(setr,found,u(find_in,%1,%q<value>)),not(strmatch(%q<found>,%2)))=@attach %!/INC`MSG=ERROR: A same-level District already uses that name.

&INC`MAKEDISTRICT [u(cobj,grid)]=@attach %!/INC`VALID`DISTRICT=%0,%1;@check isdbref(u(setr,dist%2,create(%q<value>)))=@attach %!/INC`MSG=ERROR: Could not create district.;@tel r(dist%2)=%1;@parent r(dist%2)=%1;th u(attrib_set,r(dist%2),D`DISTRICT,1);@set r(dist%2)/D`DISTRICT=no_inherit

&INC`DISTRICT`ASSIGN [u(cobj,grid)]=@attach %!/INC`FINDDIST=%0,1;@attach %!/INC`FINDDIST=%1,2;@attach %!/INC`VALID`DISTRICT=name(%q<dist1>),%q<dist2>;@parent %q<dist1>=%q<dist2>;@attach %!/INC`MSG=District %q<distname1> assigned to %q<distnames2>!;@attach %!/INC`MSG`CHAN=Assigned %q<distname1> to: %q<distnames2>

&INC`DISTRICT`RENAME [u(cobj,grid)]=@attach %!/INC`FINDDIST=%0;@attach %!/INC`VALID`DISTRICT=%1,parent(%q<dist>);@attach %!/INC`MSG=District Renamed!;@attach %!/INC`MSG`CHAN={Renamed District %q<dist> '%q<distname>' to '%q<value>'};@name %q<dist>=%q<value>

&INC`DISTRICT`DESCRIBE [u(cobj,grid)]=@attach %!/INC`FINDDIST;@check cor(u(isadmin,%#),controls(%#,%q<dist>))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Nothing entered for the description!;@attach %!/INC`MSG=Description set.;@desc %q<dist>=%1;@attach %!/INC`MSG`CHAN={Changed Description for %q<dist> '%q<distname>'}

&INC`DISTRICT`IC [u(cobj,grid)]=@attach %!/INC`FINDDIST=%0;@check cor(u(isadmin,%#),controls(%#,%q<dist>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`BOOL=%1;@attach %!/INC`MSG=IC value set.;&D`IC %q<dist>=%q<value>;@attach %!/INC`MSG`CHAN={Changed IC for %q<dist> to '%q<value>'}

&INC`DISTRICT`ORDER [u(cobj,grid)]=@attach %!/INC`FINDDIST=%0;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Order value empty.;@check valnum(%1)=@attach %!/INC`MSG=ERROR: Order values must be whole, positive numbers.;&ORDER %q<dist>=%1;@set %q<dist>/ORDER=no_inherit;@attach %!/INC`MSG=Order set.;@attach %!/INC`MSG`CHAN={Changed order for %q<dist> '%q<distname>'}

&INC`FINDDIST [u(cobj,grid)]=@check strlen(%0)=@attach %!/INC`MSG=ERROR: No District entered to check.;th u(setq,dist%1,u(cobj,district));@select/inline strlen(%0)=0,{@@ We're sticking with the root district!},{@dolist/inline/delimit / %0={th u(setq,dname,trim(u(choosegame,%i0,%d0)));@check words(u(setr,dist%1,namegraball(u(FUN`LISTDISTRICTS,r(dist%1)),%q<dname>)))=@attach %!/INC`MSG=ERROR: District '%q<dname>' not found.;@stop gt(words(r(dist%1)),1)=@attach %!/INC`MSG=ERROR: '%q<dname>' matched [u(itemize,iter(r(dist%1),u(pueblize,name(%i0),+district %i0),%b,|),|,and,\,)]. Please be more specific!;th u(setq,distname%1,name(r(dist%1)));th u(setq,alldists%1,cat(r(alldists%1),r(dist%1)))}};th u(setq,distnames%1,iter(r(alldists%1),u(moniker,%i0),%b,ansi(hy,/)));

&INC`DISTRICT`LOCK [u(cobj,grid)]=@check isdbref(u(cobj,lms))=@attach %!/INC`MSG=ERROR: Lock Management System <LMS> not installed. Use @lock instead.;@attach %!/INC`FINDDIST=before(%0,/);@check cor(u(isadmin,%#),controls(%#,%q<dist>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach u(cobj,lms)/INC`DOLOCK=%q<dist>,after(%0,/),%1,1
&INC`DISTRICT`UNLOCK [u(cobj,grid)]=@attach %!/INC`MSG=To Unlock, use the @unlock command directly.

&INC`DISTCHECK [u(cobj,grid)]=@check strlen(u(setr,dist,get(%#/D`DISTRICT)))=@attach %!/INC`MSG=Please choose a District using +district <name>.;@check match(u(FUN`LISTDISTRICTS),%q<dist>)=@attach %!/INC`MSG=ERROR: District no longer valid. Please choose a District using +district <name>.;@check cor(u(isadmin,%#),controls(%#,%q<dist>))=@attach %!/INC`MSG=ERROR: Permission denied.;th u(setq,distname,name(%q<dist>))

&INC`DIG`TELEPORT [u(cobj,grid)]=@attach %!/INC`DIG`MAIN=%0,%1,1
&INC`DIG`MAIN [u(cobj,grid)]=@attach %!/INC`DISTCHECK;@check hastype(%l,ROOM)=@attach %!/INC`MSG=ERROR: +dig can only be used from a proper room.;@check strlen(%0)=@attach %!/INC`MSG=ERROR: No room name entered.;@check valid(name,%0)=@attach %!/INC`MSG=ERROR: '%0' is not a good name for a Room.;@check u(setr,room,dig(%0))=@attach %!/INC`MSG=ERROR: Could not create room.;th u(setq,source,%l);@parent %q<room>=%q<dist>;@attach %!/INC`MSG=Room created successfully!;@select/inline strlen(u(setr,exname,before(%1,\,)))=>0,{@select/inline isdbref(u(setr,there,open(%q<exname>,%q<room>,%q<source>)))=1,{@attach %!/INC`MSG=Exit to new room created successfully!},0,{@attach %!/INC`MSG=ERROR: Exit to new room creation failed.}};@select/inline strlen(u(setr,exname,after(%1,\,)))=>0,{@select/inline isdbref(u(setr,back,open(%q<exname>,%q<source>,%q<room>)))=1,{@attach %!/INC`MSG=Exit from new room created successfully!},0,{@attach %!/INC`MSG=ERROR: Exit from new room creation failed.}};@select/inline %2=1,{@teleport %#=%q<room>};@attach %!/INC`MSG`CHAN={Room %q<room> '%0' created for %q<dist> '%q<distname>'}

&INC`CONVERT`MAIN [u(cobj,grid)]=@attach %!/INC`DISTCHECK;@check hastype(%l,ROOM)=@attach %!/INC`MSG=ERROR: +convert can only be used from a proper room.;@parent %l=%q<dist>;@check controls(%#,%l)=@attach %!/INC`MSG=ERROR: Permission denied.;@parent %l=%q<dist>;@attach %!/INC`MSG=Room converted to %q<dist> '%q<distname>'.;@attach %!/INC`MSG`CHAN={Room %l '[name(%l)]' converted to %q<dist> '%q<distname>'}

&CMD`+IC [u(cobj,grid)]=$ic:@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@stop u(isic,%#)=@attach %!/INC`MSG=You're already IC.;@check u(approved,%#)=@attach %!/INC`MSG=You are not approved!;@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@select/inline cand(isobjid(u(setr,dest,get(%#/D`ICLOC))),u(isic,%q<dest>))=0,{@attach %!/INC`MSG=Your last IC location is no longer valid. Choose a new one from the exits in the starting nexus.;@check isdbref(u(setr,dest,u(conf,IC_NEXUS)))=@attach %!/INC`MSG=ERROR: This game does not have an IC Nexus set.};@attach %!/INC`CANRELOCATE=%#,%q<dest>;@attach %!/INC`RELOCATE=%#,%q<dest>

&CMD`+OOC [u(cobj,grid)]=$ooc:@check isdbref(u(setr,dest,u(conf,OOC_NEXUS)))=@attach %!/INC`MSG=ERROR: This game does not have an OOC Nexus set.;@attach %!/INC`CANRELOCATE=%#,%q<dest>;@select/inline u(isic,%#)=0,{@stop strmatch(%l,%q<dest>)=@attach %!/INC`MSG=You are already in the OOC Nexus.;@attach %!/INC`MSG=You are already OOC. Returning you to the OOC Nexus.};@select/inline u(isic,%#)=1,{&D`ICLOC %#=objid(%l)};@attach %!/INC`RELOCATE=%#,%q<dest>

&CMD`+NEXUS [u(cobj,grid)]=$+nexus:@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@check isdbref(u(setr,dest,u(conf,IC_NEXUS)))=@attach %!/INC`MSG=ERROR: This game does not have an OOC Nexus set.;@stop strmatch(%l,%q<dest>)=@attach %!/INC`MSG=You are already there.;@attach %!/INC`CANRELOCATE=%#,%q<dest>;@attach %!/INC`RELOCATE=%#,%q<dest>

&CMD`+GOHOME [u(cobj,grid)]=$+gohome:@force/inline %#=home

&CMD`+SETHOME [u(cobj,grid)]=$+sethome:@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@check elock(%l/link,%#)=@attach %!/INC`MSG=You do not pass the link lock for this room.;@link %#=%l;@attach %!/INC`MSG=Home set to your current location.

&FUN`TELDISTS [u(cobj,grid)]=squish(iter(u(%!/FUN`LISTDISTRICTS),if(elock(%i0/[switch(%va,PennMUSH,Teleport,RhostMUSH,Use)],u(strfirstof,%1,%#)),%i0)))
&FUN`FINDROOM [u(cobj,grid)]=u(namegraball,u(FUN`LISTROOMS),%0)
&FUN`LISTROOMS [u(cobj,grid)]=squish(iter(u(FUN`TELDISTS,,%1),u(FUN`LISTDISTROOMS,%i0))%B[u(FUN`LISTTHINGS)])
&FUN`LISTDISTROOMS [u(cobj,grid)]=u(sortname,u(filter,NOTDIST,children(%0)))
&FUN`LISTTHINGS [u(cobj,grid)]=squish(iter(u(FUN`FINDTHINGS),if(cor(elock(%i0/[switch(%va,PennMUSH,Teleport,RhostMUSH,Tport)],u(strfirstof,%1,%#)),u(isadmin,u(strfirstof,%1,%#))),%i0)))
&FUN`FINDTHINGS`PENNMUSH [u(cobj,grid)]=lsearch(all,type,thing,elock,PORT:>0)
&FUN`FINDTHINGS`RHOSTMUSH [u(cobj,grid)]=search(ETHING=\[get(##/PORT)\])
&FUN`LISTALLDISTS [u(cobj,grid)]=u(choosegame,lsearch(all,type,thing,elock,D`DISTRICT:>0),search(ETHING=\[get(##/D`DISTRICT)\]))

&CMD`+PORT [u(cobj,grid)]=$+port *:@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@select/inline isdbref(%0)=1,{th u(setq,dest,%0)},0,{@check words(u(setr,dest,u(FUN`FINDROOM,%0)))=@attach %!/INC`MSG=Nothing matches '%0'.;;@stop gt(words(%q<dest>),1)=@attach %!/INC`MSG=Multiple Matches:%R[iter(%q<dest>,u(pueblize,ansi(hx,%i0) - [ansi(c,name(%i0))],+port %i0),%b,%r)]};@stop strmatch(%l,%q<dest>)=@attach %!/INC`MSG=You are already there.;@attach %!/INC`CANRELOCATE=%#,%q<dest>;@attach %!/INC`RELOCATE=%#,%q<dest>

&INC`CANRELOCATE [u(cobj,grid)]=@select/inline cor(u(isadmin,%#),u(isadmin,%0))=0,{@check elock(loc(%0)/leave,%0)=@attach %!/INC`MSG=LEAVE @lock Failure.;@check elock(%1/Enter,%0)=@attach %!/INC`MSG=ENTER @lock failure.;@select/inline %va=PennMUSH,{@check elock(%1/Teleport,%0)=@attach %!/INC`MSG=TELEPORT @lock failure.}}

&INC`RELOCATE [u(cobj,grid)]=@select/inline switch(%va,PennMUSH,1,RhostMUSH,0)[u(ishidden,%0)]=11,{@tel/silent %0=%1},01,{@tel/quiet %0=%1},*0,{@tel %0=%1}

&CMD`+ROOMLIST [u(cobj,grid)]=$+roomlist:@pemit %#=u(header,mudname() Grid Rooms);@dolist/inline u(FUN`TELDISTS)={@pemit %#=u(SEPARATOR,name(##));th step(FUN`ROOMLIST,u(FUN`LISTDISTROOMS,##),30)};@select/inline words(u(setr,things,u(FUN`LISTTHINGS)))=>0,{@pemit %#=u(SEPARATOR,Player Things);th step(FUN`ROOMLIST,%q<things>,10)};@pemit %#=u(subheader)

&CMD`+ROOMLIST`ARG [u(cobj,grid)]=$+roomlist *:think u(setq,l,u(FUN`FINDROOM)); @check strlen(u(setr,m,strfirstof(grab(%ql,%0),u(namegraball,%ql,%0))))=@pemit %#=Nothing matches '%0'.;@pemit %#=u(header,'%0');th step(FUN`ROOMLIST,%qm,10);@pemit %#=u(subheader)

&FUN`ROOMLIST [u(cobj,grid)]=pemit(%#,u(table,iter(lnum(0,sub(%+,1)),ljust(ansi(c,u(pueblize,v(%i0),+port [v(%i0)])),6) [ansi(hx,u(pueblize,name(v(%i0)),+port [v(%i0)]))],%b,|),38,u(width,%#),|))


@@ MEETME SECTION
&CMD`+MEETME`PENNMUSH [u(cobj,grid)]=$^(?s)(?\:\+)?(invite|summon|join)(?\:/(\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+MEETME`MAIN
@set [u(cobj,grid)]/CMD`+MEETME`PENNMUSH=regexp
&CMD`+MEETME`RHOSTMUSH [u(cobj,grid)]=$^(?s)(?\:\+)?(invite|summon|join)(?\:/(\\S+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+GRID`MAIN
@set [u(cobj,grid)]/CMD`+MEETME`RHOSTMUSH=regexp
&CMD`+MEETME`MAIN [u(cobj,grid)]=th u(setq,systype,meetme);@attach %!/INC`%q<systype>`%1=%3,%4
@set [u(cobj,grid)]/CMD`+MEETME`[switch(%va,PennMUSH,RHOSTMUSH,RhostMUSH,PENNMUSH)]=no_command

&INC`MEETME`INVITE [u(cobj,grid)]=@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=%0,1;@stop strmatch(%#,%q<t1>)=@attach %!/INC`MSG=ERROR: Yourself? Really?;@stop strmatch(%l,loc(%q<t1>))=@attach %!/INC`MSG=You are already in the same location!;&D`INVITE`%q<t1> %#=secs();@pemit %q<t1>=u(header,Meetme,%q<t1>);@pemit %q<t1>=%n invited you to [u(pueblize,ansi(h,join),join %n)] or [u(pueblize,ansi(h,summon),summon %n)] %o. You have 10 minutes to respond.;@pemit %q<t1>=u(footer,,%q<t1>);@attach %!/INC`MSG=You have sent %q<t1name> a Meetme request.

&INC`MEETME`JOIN [u(cobj,grid)]=@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=%0,1;@stop strmatch(%#,%q<t1>)=@attach %!/INC`MSG=ERROR: Yourself? Really?;@stop strmatch(%l,loc(%q<t1>))=@attach %!/INC`MSG=You are already there!;@select/inline if(u(isadmin,%#),1,sub(secs(),max(get(%q<t1>/D`JOIN`%#),get(%q<t1>/D`INVITE`%#))))=<600,{@attach %!/INC`CANRELOCATE=%#,loc(%q<t1>);@attach %!/INC`MSG`ROOM={[u(moniker,%#)] joins %q<t1name>!};@select/inline u(isic,%l)=1,{&D`RETURNTO %#=%l};@attach %!/INC`RELOCATE=%#,loc(%q<t1>);@attach %!/INC`MSG`ROOM={[u(moniker,%#)] has joined %q<t1name>!};@wipe %q<t1>/D`INVITE`%#;@wipe %q<t1>/D`SUMMON`%#},{@select/inline isdbref(u(setr,dest,u(FUN`FINDROOM,loc(%q<t1>))))=1,{@attach %!/INC`CANRELOCATE=%#,loc(%q<t1>);@attach %!/INC`MSG`ROOM={[u(moniker,%#)] joins %q<t1name>!};@select/inline u(isic,%l)=1,{&D`RETURNTO %#=%l};@attach %!/INC`RELOCATE=%#,loc(%q<t1>);@attach %!/INC`MSG`ROOM={[u(moniker,%#)] has joined %q<t1name>!};@wipe %q<t1>/D`INVITE`%#;@wipe %q<t1>/D`JOIN`%#},0,{&D`SUMMON`%q<t1> %#=secs();@pemit %q<t1>=u(header,Meetme,%q<t1>);@pemit %q<t1>=%n asked for you to [u(pueblize,ansi(h,summon),summon %n)] %o. You have 10 minutes to respond.;@pemit %q<t1>=u(footer,,%q<t1>);@attach %!/INC`MSG=You have asked to join %q<t1name>.}}

&INC`MEETME`SUMMON [u(cobj,grid)]=@stop u(isguest,%#)=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=%0,1;@stop strmatch(%#,%q<t1>)=@attach %!/INC`MSG=ERROR: Yourself? Really?;@stop strmatch(%l,loc(%q<t1>))=@attach %!/INC`MSG=They are already here!;@select/inline if(u(isadmin,%#),1,sub(secs(),max(get(%q<t1>/D`SUMMON`%#),get(%q<t1>/D`INVITE`%#))))=<600,{@attach %!/INC`CANRELOCATE=%q<t1>,%l;@attach %!/INC`MSG`ROOM={[u(moniker,%q<t1>)] is whisked away by %n's summons!},lcon(loc(%q<t1>));@select/inline u(isic,loc(%q<t1>))=1,{&D`RETURNTO %q<t1>=loc(%q<t1>)};@attach %!/INC`RELOCATE=%q<t1>,%l;@attach %!/INC`MSG`ROOM={[u(moniker,%q<t1>)] is brought in by %n's summons!};@wipe %q<t1>/D`INVITE`%#;@wipe %q<t1>/D`SUMMON`%#},{&D`JOIN`%q<t1> %#=secs();@pemit %q<t1>=u(header,Meetme,,%q<t1>);@pemit %q<t1>=%n invited you to [u(pueblize,ansi(h,join),join %n)] %o. You have 10 minutes to respond.;@pemit %q<t1>=u(footer,,%q<t1>);@attach %!/INC`MSG=You have requested %q<t1name>'s presence.}

&CMD`+RETURN [u(cobj,grid)]=$+return:@check isdbref(u(setr,dest,get(%#/D`RETURNTO)))=@attach %!/INC`MSG=ERROR: You have nowhere to return to.;@attach %!/INC`CANRELOCATE=%#,%q<dest>;@attach %!/INC`RELOCATE=%#,%q<dest>;@attach %!/INC`MSG=You return to your previous location.;@wipe %q<t1>/D`RETURNTO

&CMD`+RETURN`OTHER [u(cobj,grid)]=$+return *:@stop cor(u(isguest,%#),not(u(isadmin,%#)))=@pemit %#=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=%0,1;@check isdbref(u(setr,dest,get(%q<t1>/D`RETURNTO)))=@attach %!/INC`MSG=ERROR: %q<t1name> has nowhere to return to.;@attach %!/INC`RELOCATE=%q<t1>,%q<dest>;@attach %!/INC`MSG=You have been returned to your previous location by admin.,%q<t1>;@wipe %q<t1>/D`RETURNTO

&CONFIG`OPTIONS [u(cobj,grid)]=IDLE_DESTINATION|IDLE_INTERVAL|IDLE_TIME|IC_NEXUS|OOC_NEXUS

&CONFIG`IDLE_DESTINATION [u(cobj,grid)]=The ROOM or THING to place Idle players when the Idle check runs. If this is empty, no Idle check will be done.
&CONFIG`IDLE_DESTINATION`DEFAULT [u(cobj,grid)]=
&CONFIG`IDLE_DESTINATION`VALID [u(cobj,grid)]=DBREF

&CONFIG`IDLE_INTERVAL [u(cobj,grid)]=Seconds between Idle Sweeps.
&CONFIG`IDLE_INTERVAL`DEFAULT [u(cobj,grid)]=3600
&CONFIG`IDLE_INTERVAL`VALID [u(cobj,grid)]=DURATION

&CONFIG`IDLE_TIME [u(cobj,grid)]=Seconds you must be idle to be swept up when the idlesweep runs.
&CONFIG`IDLE_TIME`DEFAULT [u(cobj,grid)]=28800
&CONFIG`IDLE_TIME`VALID [u(cobj,grid)]=DURATION

&CONFIG`IC_NEXUS [u(cobj,grid)]=Dbref people go to when using ic or +nexus.
&CONFIG`IC_NEXUS`DEFAULT [u(cobj,grid)]=
&CONFIG`IC_NEXUS`VALID [u(cobj,grid)]=DBREF

&CONFIG`OOC_NEXUS [u(cobj,grid)]=DBREF people go to when using ooc.
&CONFIG`OOC_NEXUS`DEFAULT [u(cobj,grid)]=
&CONFIG`OOC_NEXUS`VALID [u(cobj,grid)]=DBREF

&STARTUP [u(cobj,grid)]=@trigger %!/LOOP`IDLESWEEP
&LOOP`IDLESWEEP [u(cobj,grid)]=@select/inline isdbref(u(setr,dest,u(conf,IDLE_DESTINATION)))=>0,{@select/inline words(u(setr,idlers,u(filter,NOTADMIN,u(filter,LOCCHECK,u(filter,OVERIDLE,u(lwhoid),%b,%b,u(conf,IDLE_TIME)),%b,%b,num(%q<dest>)))))=>0,{@attach %!/INC`MSG`NOTICE=You are being moved to the idle room due to inactivity.,%q<idlers>;@tel/list %q<idlers>=%q<dest>}};@wait u(conf,IDLE_INTERVAL)=@trigger %!/LOOP`IDLESWEEP

&FIL`NOTADMIN [u(cobj,grid)]=not(u(isadmin,%0))
&FIL`OVERIDLE [u(cobj,grid)]=gte(idle(%0),%1)
&FIL`LOCCHECK [u(cobj,grid)]=not(strmatch(loc(%0),%1))

&HLP`INVITE [u(cobj,grid)]=The [ansi(h,+invite)] system lets players warp across the game to directly join other players no matter where they are.%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+invite <player>)] - Extends an invitation for another player to +join or +summon you. Invites expire after 10 minutes.%R[ansi(h,+join <player>)] - Warp to a player\, or extend a request for <player> to +summon you. You can also +join to someone if they are within reach of +port.%R[ansi(h,+summon <player>)] - Bring <player> to you\, or extend a request for <player> to +join you.%R%RStaff can skip the invite process and simply join or summon players. However they can still extend invites.)]
+help/add Navigation/+invite=[u(cobj,grid)]/HLP`INVITE

&HLP`GRID [u(cobj,grid)]=The Grid system is a series of commands that make it easy to navigate the IC rooms, or 'Grid.'%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,ooc)] - head to the OOC meeting grounds.%r[ansi(h,ic)] - Return to your last IC location\, or the IC nexus if that fails.%R[ansi(h,+nexus)] - Teleport to the IC Nexus.%R[ansi(h,+roomlist)] - List all IC rooms in the game that you can +port to.%R[ansi(h,+roomlist <search>)] - List all IC rooms partially matching the entered text.%R[ansi(h,+port <name or dbref>)] - Teleport to a room.%R[ansi(h,+sethome)] - Set the current location as your 'home.'%R[ansi(h,+gohome)] or [ansi(h,home)] - Teleport to your home.)]%R%RPlayers using THINGS as hangouts can make that object a valid +port destination by setting its PORT attribute to 1. use &PORT here=1 while within the object to set it.[u(choosegame,%RPENNMUSH: You must also set @lock/teleport here=#TRUE - Penn users can use @lock/teleport to restrict who can access the object with +port.)]
+help/add Navigation/Grid=[u(cobj,grid)]/HLP`GRID

&SHLP`DISTRICT [u(cobj,grid)]=The +district system helps admin keep their Grid organized by breaking it up into any number of arbitrary 'districts' or 'regions'. Each 'District' is a THING that rooms can be @parent'd to. +district is the central management for +roomlist and +port, so set good locks![u(choosegame,,%RRHOSTMUSH: Please note that in Rhost the +roomlist and +port teleport checks key off of @lock/use as it is the only one that can be inherited by @parent. +district/lock is almost useless on RhostMUSH.)]%RThe DBREF of the District Parent is: [u(cobj,district)]%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+district)] - List all districts.%r[ansi(h,+district/create <name>)] - Create a new district.%R[ansi(h,+district/rename <district>=<newname>)] - Rename a district.%R[ansi(h,+district/order <name>=<#>)] - Change a +district's order on the list and +roomlist.%R[ansi(h,+district/lock <district>/<locktype>=<lockstring>)] - Set a lock on a +district. Enhanced by the LOCK MANAGER SYSTEM if available. Use @unlock to clear them.%R[ansi(h,+district/describe <name>=<text>)] - Set a +district's description.%R[ansi(h,+district/ic <name>=<#>)] - Decide whether a +District is an IC or OOC location. Set to 0 or 1!%R[ansi(h,+district/subcreate <district>=<new district name>)] - Creates a sub-district for a given District!%R[ansi(h,+district/assign <district>=<new district parent>)] - Assign existing District to a new parent. @parent them to [u(cobj,district)] to undo.%R[ansi(h,+district <name>)] - Choose to manage a certain district. This works for...%R[ansi(h,+dig)]\, [ansi(h,+open)] - Builder commands. Works like @dig and @open but auto-@parents the created objects.%R[ansi(h,+convert)] - Converts the room you're currently in to your managed +district. Basically just changes the @parent.%R%RA Note on Districts and Sub-Districts:%RTo target a Sub-district, you can nest them like you would folders. For example: +district/subcreate Admin/Electric=Boogaloo would create the sub-district 'Boogaloo' in Admin's Electric sub-district. Then you could +district/assign Admin/Electric/Boogaloo=<something else>. These are really just fancy @parent objects. Use the @parent command to assign to 'District Parent' [u(cobj,district)] if you need to reset a district to top-level.)]
+shelp/add Building/+district=[u(cobj,grid)]/SHLP`DISTRICT